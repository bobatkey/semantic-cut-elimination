@article{Girard87:ll,
  author       = {Jean{-}Yves Girard},
  title        = {Linear Logic},
  journal      = {Theor. Comput. Sci.},
  volume       = {50},
  pages        = {1--102},
  year         = {1987},
  url          = {https://doi.org/10.1016/0304-3975(87)90045-4},
  doi          = {10.1016/0304-3975(87)90045-4},
  timestamp    = {Wed, 17 Feb 2021 22:00:41 +0100},
  biburl       = {https://dblp.org/rec/journals/tcs/Girard87.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@software{Agda264,
  author  = {{Agda Developers}},
  title   = {{Agda}},
  url     = {https://agda.readthedocs.io/en/v2.6.4/},
  version = {2.6.4}
}

@software{AgdaStdlib20,
  author  = {{The Agda Community}},
  month   = dec,
  title   = {{Agda Standard Library}},
  url     = {https://github.com/agda/agda-stdlib},
  version = {2.0},
  year    = {2023}
}

@inproceedings{BrunnlerT01:lcs,
  author    = {Br\"{u}nnler, Kai and Tiu, Alwen Fernanto},
  title     = {A Local System for Classical Logic},
  year      = {2001},
  isbn      = {3540429573},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  abstract  = {The calculus of structures is a framework for specifying logical systems, which is similar to the one-sided sequent calculus but more general. We present a system of inference rules for propositional classical logic in this new framework and prove cut elimination for it. The system enjoys a decomposition theorem for derivations that is not available in the sequent calculus. The main novelty of our system is that all the rules are local: contraction, in particular, is reduced to atomic form. This should be interesting for distributed proof-search and also for complexity theory, since the computational cost of applying each rule is bounded.},
  booktitle = {Proceedings of the Artificial Intelligence on Logic for Programming},
  pages     = {347–361},
  numpages  = {15},
  series    = {LPAR '01}
}

@book{GirardTL89:proofs,
  author    = {Girard, Jean-Yves and Taylor, Paul and Lafont, Yves},
  title     = {Proofs and Types},
  year      = {1989},
  isbn      = {0521371813},
  publisher = {Cambridge University Press},
  address   = {USA}
}

@techreport{Guglielmi99:bv,
  author      = {Alessio Guglielmi},
  title       = {A Calculus of Order and Interaction},
  institution = {Knowledge Representation and Reasoning Group, Department of
                 Computer Science, Dresden University of Technology},
  year        = {1999},
  note        = {The technical report is no longer available. The author states it was ``thoroughly rewritten'' as A System of Interaction and Structure~\cite{Guglielmi07:sis}.}
}

@book{Milner89:CC,
  title     = {Communication \& Concurrency},
  author    = {Milner, Robin},
  publisher = {Prentice Hall},
  month     = mar,
  year      = 1989,
  address   = {Philadelphia, PA}
}

@book{Milner80:CCS,
  title     = {A Calculus of Communicating Systems},
  author    = {Robin Milner},
  isbn      = {978-3-540-10235-9},
  issn      = {1611-3349},
  doi       = {10.1007/3-540-10235-3},
  series    = {Lecture Notes in Computer Science},
  publisher = {Springer Berlin Heidelberg},
  year      = {1980},
  month     = sep
}

@article{Guglielmi07:sis,
  author     = {Guglielmi, Alessio},
  title      = {A system of interaction and structure},
  year       = {2007},
  issue_date = {January 2007},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {8},
  number     = {1},
  issn       = {1529-3785},
  url        = {https://doi.org/10.1145/1182613.1182614},
  doi        = {10.1145/1182613.1182614},
  abstract   = {This article introduces a logical system, called BV, which extends multiplicative linear logic by a noncommutative self-dual logical operator. This extension is particularly challenging for the sequent calculus, and so far, it is not achieved therein. It becomes very natural in a new formalism, called the calculus of structures, which is the main contribution of this work. Structures are formulas subject to certain equational laws typical of sequents. The calculus of structures is obtained by generalizing the sequent calculus in such a way that a new top-down symmetry of derivations is observed, and it employs inference rules that rewrite inside structures at any depth. These properties, in addition to allowing the design of BV, yield a modular proof of cut elimination.},
  journal    = {ACM Trans. Comput. Logic},
  month      = {jan},
  pages      = {1–es},
  numpages   = {64},
  keywords   = {Calculus of structures, cut elimination, deep inference, linear logic, mix rule, noncommutativity, pomset logic, self-duality, symmetry}
}

@book{Troelstra92:lll,
  title     = {Lectures on Linear Logic},
  author    = {Anne Sjerp Troelstra},
  year      = {1992},
  publisher = {Center for the Study of Language and Information},
  address   = {Stanford, CA}
}

@article{Abrusci91:psc,
  issn      = {00224812},
  url       = {http://www.jstor.org/stable/2275485},
  author    = {V. Michele Abrusci},
  journal   = {The Journal of Symbolic Logic},
  number    = {4},
  pages     = {1403--1451},
  publisher = {[Association for Symbolic Logic, Cambridge University Press]},
  title     = {Phase Semantics and Sequent Calculus for Pure Noncommutative Classical Linear Propositional Logic},
  urldate   = {2024-03-25},
  volume    = {56},
  year      = {1991}
}

@inproceedings{De22:psc,
  author    = {De, Abhishek and Jafarrahmani, Farzad and Saurin, Alexis},
  title     = {{Phase Semantics for Linear Logic with Least and Greatest Fixed Points}},
  booktitle = {42nd IARCS Annual Conference on Foundations of Software Technology and Theoretical Computer Science (FSTTCS 2022)},
  pages     = {35:1--35:23},
  series    = {Leibniz International Proceedings in Informatics (LIPIcs)},
  isbn      = {978-3-95977-261-7},
  issn      = {1868-8969},
  year      = {2022},
  volume    = {250},
  editor    = {Dawar, Anuj and Guruswami, Venkatesan},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address   = {Dagstuhl, Germany},
  url       = {https://drops-dev.dagstuhl.de/entities/document/10.4230/LIPIcs.FSTTCS.2022.35},
  urn       = {urn:nbn:de:0030-drops-174272},
  doi       = {10.4230/LIPIcs.FSTTCS.2022.35},
  annote    = {Keywords: Linear logic, fixed points, phase semantics, closure ordinals, cut elimination}
}

@inproceedings{Frumin22:psc,
  author    = {Frumin, Dan},
  title     = {{Semantic cut elimination for the logic of bunched implications, formalized in Coq}},
  year      = {2022},
  isbn      = {9781450391825},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3497775.3503690},
  doi       = {10.1145/3497775.3503690},
  abstract  = {The logic of bunched implications (BI) is a substructural logic that forms the backbone of separation logic, the much studied logic for reasoning about heap-manipulating programs. Although the proof theory and metatheory of BI are mathematically involved, the formalization of important metatheoretical results is still incipient. In this paper we present a self-contained formalized, in the Coq proof assistant, proof of a central metatheoretical property of BI: cut elimination for its sequent calculus. The presented proof is semantic, in the sense that is obtained by interpreting sequents in a particular “universal” model. This results in a more modular and elegant proof than a standard Gentzen-style cut elimination argument, which can be subtle and error-prone in manual proofs for BI. In particular, our semantic approach avoids unnecessary inversions on proof derivations, or the uses of cut reductions and the multi-cut rule. Besides modular, our approach is also robust: we demonstrate how our method scales, with minor modifications, to (i) an extension of BI with an arbitrary set of simple structural rules, and (ii) an extension with an S4-like □ modality.},
  booktitle = {Proceedings of the 11th ACM SIGPLAN International Conference on Certified Programs and Proofs},
  pages     = {291–306},
  numpages  = {16},
  keywords  = {Coq, bunched implications, cut elimination, interactive theorem proving, substructural logics},
  location  = {Philadelphia, PA, USA},
  series    = {CPP 2022}
}

@inproceedings{NguyenS22:bvisnotpl,
  author    = {Nguyễn, L\^{e} Th\`{a}nh D\~{u}ng (Tito) and Stra{\ss}burger, Lutz},
  title     = {{BV and Pomset Logic Are Not the Same}},
  booktitle = {30th EACSL Annual Conference on Computer Science Logic (CSL 2022)},
  pages     = {32:1--32:17},
  series    = {Leibniz International Proceedings in Informatics (LIPIcs)},
  isbn      = {978-3-95977-218-1},
  issn      = {1868-8969},
  year      = {2022},
  volume    = {216},
  editor    = {Manea, Florin and Simpson, Alex},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address   = {Dagstuhl, Germany},
  url       = {https://drops-dev.dagstuhl.de/entities/document/10.4230/LIPIcs.CSL.2022.32},
  urn       = {urn:nbn:de:0030-drops-157521},
  doi       = {10.4230/LIPIcs.CSL.2022.32},
  annote    = {Keywords: proof nets, deep inference, pomset logic, system BV, cographs, dicographs, series-parallel orders}
}


@article{NguyenS23:complexity,
  TITLE = {{A System of Interaction and Structure III: The Complexity of BV and
  Pomset Logic}},
  AUTHOR = {Lê Thành Dũng Nguyên and Lutz Straßburger},
  URL = {https://lmcs.episciences.org/12705},
  DOI = {10.46298/lmcs-19(4:25)2023},
  JOURNAL = {{Logical Methods in Computer Science}},
  VOLUME = {{Volume 19, Issue 4}},
  YEAR = {2023},
  MONTH = Dec,
  KEYWORDS = {Computer Science - Logic in Computer Science},
}

@article{Horne15:mav,
  title        = {The Consistency and Complexity of Multiplicative Additive System Virtual},
  author       = {R. Horne},
  journal      = {Scientific Annals of Computer Science},
  volume       = {25},
  number       = {2},
  organization = {``A.I. Cuza'' University, Iasi, Romania},
  year         = {2015},
  pages        = {245--316},
  doi          = {10.7561/SACS.2015.2.245},
  publisher    = {``A.I. Cuza'' University Press}
}

@article{Okada99:psc,
  title    = {Phase semantic cut-elimination and normalization proofs of first- and higher-order linear logic},
  journal  = {Theoretical Computer Science},
  volume   = {227},
  number   = {1},
  pages    = {333-396},
  year     = {1999},
  issn     = {0304-3975},
  doi      = {https://doi.org/10.1016/S0304-3975(99)00058-4},
  url      = {https://www.sciencedirect.com/science/article/pii/S0304397599000584},
  author   = {Mitsuhiro Okada},
  keywords = {Phase semantics, Normalization theorem, Cut-elimination, Linear logic, Higher-order logic},
  abstract = {We give a natural extension of Girard's phase semantic completeness proof of the (first order) linear logic Girard (Theoret. Comput. Sci., 1987) to a phase semantic cut-elimination proof. Then we extend this idea to a phase semantic cut-elimination proof for higher order linear logic. We also extend the phase semantics for provability to a phase semantics-like framework for proofs, by modifying the phase space of monoid domain to that of proof-structures (untyped proofs) domain, in a natural way. The resulting phase semantic-like framework for proofs provides various versions of proof-normalization theorem.}
}

@incollection{Retore21:pomset,
  doi       = {10.1007/978-3-030-66545-6_9},
  year      = {2021},
  publisher = {Springer International Publishing},
  pages     = {299--345},
  author    = {Christian Retor{\'{e}}},
  title     = {Pomset Logic},
  booktitle = {Joachim Lambek: The Interplay of Mathematics,  Logic,  and Linguistics}
}

@incollection{Retore97:pomset,
  doi       = {10.1007/3-540-62688-3_43},
  year      = {1997},
  publisher = {Springer Berlin Heidelberg},
  pages     = {300--318},
  author    = {Christian Retor{\'{e}}},
  title     = {Pomset logic: A non-commutative extension of classical linear logic},
  booktitle = {Lecture Notes in Computer Science}
}

@article{Slavnov19:scmll,
  title    = {{On noncommutative extensions of linear logic}},
  author   = {Sergey Slavnov},
  doi      = {10.23638/LMCS-15(3:30)2019},
  journal  = {{Logical Methods in Computer Science}},
  volume   = {{Volume 15, Issue 3}},
  year     = {2019},
  month    = Sep,
  keywords = {Computer Science - Logic in Computer Science ; Mathematics - Logic}
}

@article{Tiu06:sisii,
  title    = {{A System of Interaction and Structure II: The Need for Deep Inference}},
  author   = {Alwen Tiu},
  url      = {https://lmcs.episciences.org/2252},
  doi      = {10.2168/LMCS-2(2:4)2006},
  journal  = {{Logical Methods in Computer Science}},
  volume   = {{Volume 2, Issue 2}},
  year     = {2006},
  month    = Apr,
  keywords = {Computer Science - Logic in Computer Science ; F.4.1}
}

@article{Kahramanogullari08:maude,
  author     = {Kahramano\u{g}ullar\i{}, Ozan},
  title      = {Maude as a Platform for Designing and Implementing Deep Inference Systems},
  year       = {2008},
  issue_date = {November, 2008},
  publisher  = {Elsevier Science Publishers B. V.},
  address    = {NLD},
  volume     = {219},
  issn       = {1571-0661},
  url        = {https://doi.org/10.1016/j.entcs.2008.10.033},
  doi        = {10.1016/j.entcs.2008.10.033},
  abstract   = {Deep inference is a proof theoretical methodology that generalizes the traditional notion of inference in the sequent calculus: in contrast to the sequent calculus, the deductive systems with deep inference do not rely on the notion of main connective, and permit the application of the inference rules at any depth inside logical expressions, in a way which resembles the application of term rewriting rules. Deep inference provides a richer combinatoric analysis of proofs for different logics. In particular, construction of exponentially shorter proofs becomes possible. In this paper, aiming at the development of computation as proof search tools, we propose the Maude language as a means for designing and implementing different deep inference deductive systems and proof strategies that work on these systems. We give Maude implementations of deep inference systems together with an implementation that simulates sequent calculus proofs to serve as a benchmark. We demonstrate these ideas on classical logic, and argue that they can be analogously carried to other deep inference systems for other logics, as well as sequent calculus systems.},
  journal    = {Electron. Notes Theor. Comput. Sci.},
  month      = {nov},
  pages      = {35–50},
  numpages   = {16},
  keywords   = {term rewriting, proof search, deep inference, Maude}
}

@article{ClavelDELMMQ02:maude,
  title    = {Maude: specification and programming in rewriting logic},
  journal  = {Theoretical Computer Science},
  volume   = {285},
  number   = {2},
  pages    = {187-243},
  year     = {2002},
  note     = {Rewriting Logic and its Applications},
  issn     = {0304-3975},
  doi      = {https://doi.org/10.1016/S0304-3975(01)00359-0},
  url      = {https://www.sciencedirect.com/science/article/pii/S0304397501003590},
  author   = {M. Clavel and F. Dur\'an and S. Eker and P. Lincoln and N. Mart\'i-Oliet and J. Meseguer and J.F. Quesada},
  keywords = {Maude, Rewriting logic, Functional modules, System modules, Parameterization, Reflection, Internal strategies},
  abstract = {Maude is a high-level language and a high-performance system supporting executable specification and declarative programming in rewriting logic. Since rewriting logic contains equational logic, Maude also supports equational specification and programming in its sublanguage of functional modules and theories. The underlying equational logic chosen for Maude is membership equational logic, that has sorts, subsorts, operator overloading, and partiality definable by membership and equality conditions. Rewriting logic is reflective, in the sense of being able to express its own metalevel at the object level. Reflection is systematically exploited in Maude endowing the language with powerful metaprogramming capabilities, including both user-definable module operations and declarative strategies to guide the deduction process. This paper explains and illustrates with examples the main concepts of Maude's language design, including its underlying logic, functional, system and object-oriented modules, as well as parameterized modules, theories, and views. We also explain how Maude supports reflection, metaprogramming and internal strategies. The paper outlines the principles underlying the Maude system implementation, including its semicompilation techniques. We conclude with some remarks about applications, work on a formal environment for Maude, and a mobile language extension of Maude.}
}

@incollection{Guglielmi14:di,
  author    = {Alessio Guglielmi},
  booktitle = {All about Proofs, Proofs for All},
  publisher = {College Publications},
  editor    = {Bruno Woltzenlogel Paleo and David Delahaye},
  title     = {Deep Inference},
  year      = {2015},
  month     = jan,
  isbn      = {978-1-84890-166-7}
}

@book{Barr_1979,
  title     = {*-Autonomous Categories},
  isbn      = {9783540348504},
  issn      = {1617-9692},
  url       = {http://dx.doi.org/10.1007/BFb0064579},
  doi       = {10.1007/bfb0064579},
  journal   = {Lecture Notes in Mathematics},
  publisher = {Springer Berlin Heidelberg},
  author    = {Barr, Michael},
  year      = {1979}
}

@inbook{Day_1970,
title={On closed categories of functors},
ISBN={9783540362920},
ISSN={1617-9692},
url={http://dx.doi.org/10.1007/BFb0060438},
DOI={10.1007/bfb0060438},
booktitle={Reports of the Midwest Category Seminar IV},
publisher={Springer Berlin Heidelberg},
author={Day, Brian},
year={1970},
pages={1–38}
}

@book{Davey_2002,
title={Introduction to Lattices and Order},
ISBN={9780511809088},
url={http://dx.doi.org/10.1017/CBO9780511809088},
DOI={10.1017/cbo9780511809088},
publisher={Cambridge University Press},
author={Davey, B. A. and Priestley, H. A.},
year={2002},
month=apr }

@article{Cockett_1999,
title={Linearly distributive functors},
volume={143},
ISSN={0022-4049},
url={http://dx.doi.org/10.1016/S0022-4049(98)00110-8},
DOI={10.1016/s0022-4049(98)00110-8},
number={1–3},
journal={Journal of Pure and Applied Algebra},
publisher={Elsevier BV},
author={Cockett, J.R.B. and Seely, R.A.G.},
year={1999},
month=nov,
pages={155–203}
}

@book{Aguiar_2010,
title={Monoidal Functors, Species and Hopf Algebras},
ISBN={9781470417680},
ISSN={2472-5145},
url={http://dx.doi.org/10.1090/crmm/029},
DOI={10.1090/crmm/029},
journal={CRM Monograph Series},
publisher={American Mathematical Society},
author={Aguiar, Marcelo and Mahajan, Swapneel},
year={2010},
month=oct }



@inproceedings{HoareMSW09,
  author       = {C. A. R. Hoare and
                  Bernhard M{\"{o}}ller and
                  Georg Struth and
                  Ian Wehrman},
  editor       = {Mario Bravetti and
                  Gianluigi Zavattaro},
  title        = {Concurrent Kleene Algebra},
  booktitle    = {{CONCUR} 2009 - Concurrency Theory, 20th International Conference,
                  {CONCUR} 2009, Bologna, Italy, September 1-4, 2009. Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {5710},
  pages        = {399--414},
  publisher    = {Springer},
  year         = {2009},
  url          = {https://doi.org/10.1007/978-3-642-04081-8\_27},
  doi          = {10.1007/978-3-642-04081-8\_27},
  timestamp    = {Tue, 14 May 2019 10:00:43 +0200},
  biburl       = {https://dblp.org/rec/conf/concur/HoareMSW09.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{Hoare_2011, title={Concurrent Kleene Algebra and its Foundations}, volume={80}, ISSN={1567-8326}, url={http://dx.doi.org/10.1016/j.jlap.2011.04.005}, DOI={10.1016/j.jlap.2011.04.005}, number={6}, journal={The Journal of Logic and Algebraic Programming}, publisher={Elsevier BV}, author={Hoare, Tony and Möller, Bernhard and Struth, Georg and Wehrman, Ian}, year={2011}, month=aug, pages={266–296} }


@article{GuglielmiS11,
  author       = {Alessio Guglielmi and
                  Lutz Stra{\ss}burger},
  title        = {A system of interaction and structure {V:} the exponentials and splitting},
  journal      = {Math. Struct. Comput. Sci.},
  volume       = {21},
  number       = {3},
  pages        = {563--584},
  year         = {2011},
  url          = {https://doi.org/10.1017/S096012951100003X},
  doi          = {10.1017/S096012951100003X},
  timestamp    = {Wed, 01 Apr 2020 08:48:43 +0200},
  biburl       = {https://dblp.org/rec/journals/mscs/GuglielmiS11.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}



@article{Baelde12,
  author       = {David Baelde},
  title        = {Least and Greatest Fixed Points in Linear Logic},
  journal      = {{ACM} Trans. Comput. Log.},
  volume       = {13},
  number       = {1},
  pages        = {2:1--2:44},
  year         = {2012},
  url          = {https://doi.org/10.1145/2071368.2071370},
  doi          = {10.1145/2071368.2071370},
  timestamp    = {Tue, 06 Nov 2018 12:51:53 +0100},
  biburl       = {https://dblp.org/rec/journals/tocl/Baelde12.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{Blute_2010, title={Deep Inference and Probabilistic Coherence Spaces}, volume={20}, ISSN={1572-9095}, url={http://dx.doi.org/10.1007/s10485-010-9241-0}, DOI={10.1007/s10485-010-9241-0}, number={3}, journal={Applied Categorical Structures}, publisher={Springer Science and Business Media LLC}, author={Blute, Richard and Panangaden, Prakash and Slavnov, Sergey}, year={2010}, month=dec, pages={209–228} }

@inbook{Ciobanu_2016, title={Behavioural Analysis of Sessions Using the Calculus of Structures}, ISBN={9783319415796}, ISSN={1611-3349}, url={http://dx.doi.org/10.1007/978-3-319-41579-6_8}, DOI={10.1007/978-3-319-41579-6_8}, booktitle={Perspectives of System Informatics}, publisher={Springer International Publishing}, author={Ciobanu, Gabriel and Horne, Ross}, year={2016}, pages={91–106} }

@article{Burger_2011, title={A system of interaction and structure {IV}: The exponentials and decomposition}, volume={12}, ISSN={1557-945X}, url={http://dx.doi.org/10.1145/1970398.1970399}, DOI={10.1145/1970398.1970399}, number={4}, journal={ACM Transactions on Computational Logic}, publisher={Association for Computing Machinery (ACM)}, author={StraßBurger, Lutz  and Guglielmi, Alessio}, year={2011}, month=jul, pages={1–39} }



@inproceedings{BergerES98,
  author       = {Ulrich Berger and
                  Matthias Eberl and
                  Helmut Schwichtenberg},
  editor       = {Bernhard M{\"{o}}ller and
                  John V. Tucker},
  title        = {{Normalisation by Evaluation}},
  booktitle    = {Prospects for Hardware Foundations, {ESPRIT} Working Group 8533, {NADA}
                  - New Hardware Design Methods, Survey Chapters},
  series       = {Lecture Notes in Computer Science},
  volume       = {1546},
  pages        = {117--137},
  publisher    = {Springer},
  year         = {1998},
  url          = {https://doi.org/10.1007/3-540-49254-2\_4},
  doi          = {10.1007/3-540-49254-2\_4},
  timestamp    = {Fri, 12 Jul 2019 14:39:18 +0200},
  biburl       = {https://dblp.org/rec/conf/nada/BergerES98.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}
